{"version":3,"sources":["css/icons/placeholder.svg","component/MapContainer.js","component/RestaurantAPI.js","component/Nav.js","component/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","activeMarker","selectedPlace","showingInfo","userClick","onMapClick","props","setIcon","setState","onMarkerClick","marker","e","title","iconMaker","placeholder","onMouseoverMarker","highlightedIcon","onMouseoutMarker","clickedList","dataset","url","size","google","maps","Size","origin","Point","anchor","scaledSize","onCloseInfowindow","inherits","createClass","key","value","forceUpdate","showingRestaurants","_this2","_this$props","restaurants","filter","query","mouseOvered","activeListInfo","_this$state","match","RegExp","escapeRegExp","res","test","name","categories","id","toString","bounds","LatLngBounds","i","point","LatLng","location","lat","lng","extend","getNorthEast","getSouthWest","react_default","a","createElement","dist","onClick","map","restaurant","index","label","position","address","city","country","postalCode","category","URL","delivery","icon","onMouseover","onMouseout","className","visible","undefined","href","onClose","Component","GoogleApiWrapper","apiKey","LoadingContainer","parameters","client_id","client_secret","near","v","getAll","axios","URLSearchParams","then","data","response","groups","items","catch","err","document","querySelector","innerHTML","Nav","onCategoryChange","onInputChange","onMouseOverList","onMouseOutList","onClickedList","categoryList","forEach","includes","push","sort","splice","sortBy","role","htmlFor","onChange","c","type","tabIndex","aria-labelledby","data-label","data-title","data-lat","data-lng","data-category","data-address","data-url","onMouseOver","bind","onMouseOut","App","updateState","RestaurantAPI","r","venue","error","console","log","event","selected","target","currentTarget","toggleNav","classList","toggle","contains","setAttribute","aria-label","component_Nav","component_MapContainer","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","component_App","getElementById","process","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d715e837.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.e0ad5d70.svg\";","import React, {Component} from 'react'\nimport {Map, InfoWindow,Marker, GoogleApiWrapper} from 'google-maps-react';\nimport escapeRegExp from 'escape-string-regexp'\nimport placeholder from '../css/icons/placeholder.svg'\n\nexport class MapContainer extends Component {\n\n  state ={\n    activeMarker:{},\n    selectedPlace:{},\n    showingInfo:false,\n    userClick:''\n  }\n\n  componentDidMount(){\n    this.forceUpdate()\n  }\n\n  onMapClick = (props)=>{\n    if(this.state.showingInfo){\n      // set icon to default when click on the map\n      if(this.state.userClick){\n        this.state.userClick.setIcon(null)\n      }\n      this.setState({\n        showingInfo:false,\n        activeMarker:null,\n        userClick:''\n      })\n    }\n  }\n\n  onMarkerClick = (props,marker,e)=>{\n  //  e.preventDefault()\n    if((this.state.userClick)&&this.state.userClick.title!== marker.title){// when user change another marker to click\n      this.state.userClick.setIcon(null) // change back the previous clicked mark icon\n    }\n    this.setState({\n      activeMarker:marker,\n      selectedPlace:props,\n      showingInfo:true,\n      userClick:marker\n    })\n    marker.setIcon(this.iconMaker(placeholder))\n  }\n\n  onMouseoverMarker=(props,marker,e)=>{\n    var highlightedIcon = this.iconMaker(placeholder)\n    marker.setIcon(highlightedIcon)\n  }\n\n  onMouseoutMarker=(props,marker,e)=>{\n    if(this.props.clickedList){\n      if(this.props.clickedList.dataset.title!== marker.title){\n        marker.setIcon(null)\n      }\n    }else{\n      if(marker.title !== this.state.userClick.title){\n        marker.setIcon(null)\n      }\n    }\n  }\n\n  iconMaker=(url)=>{\n    var icon = {url:url,\n      size: new this.props.google.maps.Size(40, 43),\n      origin:new this.props.google.maps.Point(0, 0),\n      anchor:new this.props.google.maps.Point(20, 43),\n      scaledSize:new this.props.google.maps.Size(40,43)}\n    return icon\n  }\n\n  onCloseInfowindow=()=>{\n    this.setState({\n      showingInfo:false,\n      activeMarker:null,\n      userClick:''\n    })\n  }\n\n\n  render() {\n\n    const { restaurants,filter,query, google ,clickedList,mouseOvered, activeListInfo} = this.props\n    const { activeMarker, selectedPlace, showingInfo,userClick} = this.state\n\n    var showingRestaurants;\n\n    if(filter === 'All Category'){ // no category selected\n      if(query){//have input\n        const match = new RegExp(escapeRegExp(query),'i')\n        showingRestaurants = restaurants.filter(res=> match.test(res.name))\n      }else{ //  no input\n        showingRestaurants = restaurants\n      }\n    }else{// have category selected\n      showingRestaurants= restaurants.filter(res=> res.categories[0].name === filter)//no input\n      if(query){ // havev input\n        const match = new RegExp(escapeRegExp(query),'i')\n        showingRestaurants = showingRestaurants.filter(res=> match.test(res.name))\n      }\n    }\n\n    if(clickedList){\n       showingRestaurants = restaurants.filter(res=> res.id.toString() === clickedList.id)\n    }\n    // handle when no corresponding result\n    if(showingRestaurants.length === 0){\n      showingRestaurants = restaurants\n    }\n\n    var bounds = new google.maps.LatLngBounds();\n\n    for(var i = 0; i<showingRestaurants.length; i++){\n      var point = new google.maps.LatLng(showingRestaurants[i].location.lat,\n                                         showingRestaurants[i].location.lng)\n      bounds.extend(point)\n    }\n\n    if ((bounds.getNorthEast().lat()-bounds.getSouthWest().lat() <= 0.001) &&\n        (bounds.getNorthEast().lng() - bounds.getSouthWest().lng() <= 0.001)\n        ){\n\n      bounds.extend(new google.maps.LatLng(bounds.getNorthEast().lat()+0.003,\n                                           bounds.getNorthEast().lng()+0.003))\n      bounds.extend(new google.maps.LatLng(bounds.getSouthWest().lat()-0.003,\n                                           bounds.getSouthWest().lng()-0.003))\n    }\n\n    return (\n      <Map\n        google={google}\n        bounds = {bounds}\n        onClick = {this.onMapClick}\n        >\n        {showingRestaurants.map((restaurant,index) => (\n        (((userClick)&&(userClick.title === restaurant.name))||\n        ((mouseOvered)&&(restaurant.id.toString()===mouseOvered))||(clickedList))?<Marker\n                  key = {restaurant.id}\n                  title ={restaurant.name}\n                  label={((clickedList)&&(clickedList.dataset))?clickedList.dataset.label:`${index+1}`}\n                  position ={new google.maps.LatLng(restaurant.location.lat,\n                                                     restaurant.location.lng)}\n                  onClick = {this.onMarkerClick}\n                  address = {restaurant.location.address+',' + restaurant.location.city+',' +restaurant.location.state+',' +restaurant.location.country+','+restaurant.location.postalCode}\n                  category = {restaurant.categories[0].name}\n                  URL = {(restaurant.delivery)&&(restaurant.delivery.url)?restaurant.delivery.url:'#'}\n                  icon = {this.iconMaker(placeholder)}\n                  onMouseover={this.onMouseoverMarker}\n                  onMouseout ={this.onMouseoutMarker}/>:\n        <Marker\n          key = {restaurant.id}\n          title ={restaurant.name}\n          label={((clickedList)&&(clickedList.dataset))?clickedList.dataset.label:`${index+1}`}\n          position ={new google.maps.LatLng(restaurant.location.lat,\n                                             restaurant.location.lng)}\n          onClick = {this.onMarkerClick}\n          address = {restaurant.location.address+',' + restaurant.location.city+',' +restaurant.location.state+',' +restaurant.location.country+','+restaurant.location.postalCode}\n          category = {restaurant.categories[0].name}\n          URL = {(restaurant.delivery)&&(restaurant.delivery.url)?restaurant.delivery.url:'#'}\n          onMouseover={this.onMouseoverMarker}\n          onMouseout ={this.onMouseoutMarker}\n        />\n        ))}\n\n        <InfoWindow\n              google={google}\n              className='infoWindow'\n              visible = {activeListInfo}\n              position = {(clickedList)?new google.maps.LatLng(clickedList.dataset.lat,clickedList.dataset.lng):undefined}\n          >\n          <div>\n            <a className = 'info_link' href = {(clickedList)?clickedList.dataset.url:'#'}>{(clickedList)?clickedList.dataset.title:'unavailable'}</a>\n            <div className = 'info_category'>{(clickedList)?clickedList.dataset.category:'unavailable'}</div>\n            <span className = 'info_address'>{(clickedList)?clickedList.dataset.address:'unavailable'}</span>\n          </div>\n        </InfoWindow>\n\n        <InfoWindow\n          google = {google}\n          className = 'infoWindow'\n          marker = {activeMarker}\n          visible = {showingInfo}\n          onClose = {this.onCloseInfowindow}\n          >\n          <div>\n            <a className = 'info_link' href = {selectedPlace.URL}>{selectedPlace.title}</a>\n            <div className = 'info_category'>{selectedPlace.category}</div>\n            <span className = 'info_address'>{selectedPlace.address}</span>\n          </div>\n        </InfoWindow>\n\n      </Map>\n    );\n  }\n}\n\nconst LoadingContainer = (props) => (\n  <div className = 'noMapPage'> No Internet Connection</div>\n)\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyD_IBcj1SARmEqoebgGG8z92lBw3EEdgz4',\n  LoadingContainer:LoadingContainer,\n})(MapContainer)\n","import axios from 'axios'\n\nconst database_URL='https://api.foursquare.com/v2/venues/explore?'\n\nconst parameters={\n  client_id:'UD32LRWYYUW4Z4BJRTIIDQYYR5L4PYETWVJEJ2OKRDA324YR',\n  client_secret:'VWISQ4LN3L35QWANEP2MCZLLC442HGRHMGMRVBULKLTYTLUA',\n  query :'food',\n  near :'Mountain View',\n  v:'20190302'\n}\n\nexport const getAll = () =>\n  axios(database_URL+ new URLSearchParams(parameters))\n    .then(res=>res.data.response.groups[0].items)\n    .catch(err => {\n          document.querySelector('.result-list').innerHTML = `<div class = 'noDataPage'>\n                                                      <div> Not able to fetch data :( </div>\n                                                      <p> error: ${err} </p>\n                                                      </div>`\n     })\n","import React, {Component} from 'react'\nimport escapeRegExp from 'escape-string-regexp';\nimport sortBy from 'sort-by';\n\nclass Nav extends Component{\n  render(){\n    const {query,filter, restaurants,onCategoryChange, onInputChange, onMouseOverList, onMouseOutList, onClickedList} = this.props\n    var categoryList=[]\n    if(restaurants){\n      restaurants.forEach(res=>{\n        if(!categoryList.includes(res.categories[0].name)){\n          categoryList.push(res.categories[0].name)\n        }\n      })\n      categoryList.sort()\n    }  \n    categoryList.splice(0,0,'All Category')\n\n    var showingRestaurants;\n\n    if(filter === 'All Category'){ // no category selected\n      if(query){//have input\n        const match = new RegExp(escapeRegExp(query),'i')\n        showingRestaurants = restaurants.filter(res=> match.test(res.name))\n      }else{ //  no input\n        showingRestaurants = restaurants\n      }\n    }else{// have category selected\n      showingRestaurants= restaurants.filter(res=> res.categories[0].name === filter)//no input\n      if(query){ // havev input\n        const match = new RegExp(escapeRegExp(query),'i')\n        showingRestaurants = showingRestaurants.filter(res=> match.test(res.name))\n      }\n    }\n\n  showingRestaurants.sort(sortBy('name'))\n\n    return(\n      <div role='menubar' className = 'menu-list'>\n        <div className ='user-choose'>\n          <div className = 'select'>\n            <label htmlFor = 'categorySelector'>Select a Category</label>\n              <select id='categorySelector' onChange = {onCategoryChange} placeholder='All Category'>\n                {categoryList.map((c,index)=> <option key={index} value={c}>{c}</option>)}\n              </select>\n\n            </div>\n            <div className = 'input'>\n              <label htmlFor=\"nameSelector\">Type the name of restaurant</label>\n                <input\n                  role ='search'\n                  id=\"nameSelector\"\n                  type = 'text'\n                  placeholder ='Restaurant Name'\n                  value = {query}\n                  onChange={onInputChange}/>\n            </div>\n          </div>\n\n          <div className='result-list'>\n              {(showingRestaurants.length === 0)&&\n                (<p className ='notFoundResult' tabIndex = '0'> Not found related restaurants.</p>)}\n              <ul>\n                {showingRestaurants.map((res,index)=>\n                  <li\n                  className = 'restaurant-list'\n                  aria-labelledby = {res.name}\n                  data-label = {index+1}\n                  data-title = {res.name}\n                  data-lat= {res.location.lat}\n                  data-lng= {res.location.lng}\n                  data-category = {res.categories[0].name}\n                  data-address ={res.location.address+',' + res.location.city+',' +res.location.state+',' +res.location.country+','+res.location.postalCode}\n                  data-url ={(res.delivery)&&(res.delivery.url)?res.delivery.url:'#'}\n                  id = {res.id}\n                  key = {res.id}\n                  tabIndex='0'\n                  onMouseOver = {onMouseOverList.bind(this)}\n                  onMouseOut = {onMouseOutList.bind(this)}\n                  onClick={onClickedList.bind(this)}>\n                    <span  className= 'labelNumber'>{index+1}</span>\n                    <p className= 'restaurantName' >{res.name}</p>\n                  </li>\n                )}\n              </ul>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Nav\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Map from './MapContainer'\nimport * as RestaurantAPI from './RestaurantAPI'\nimport Nav from './Nav'\n\nclass App extends Component {\n\n  state = {\n    restaurants:[],\n    filter:'All Category',\n    query:'',\n    mouseOvered:'',\n    clickedList:'',\n    activeListInfo:false //when click list, show info window\n  }\n\n  componentDidMount(){\n    this.updateState()\n  }\n\n\n  updateState = ()=>{\n    RestaurantAPI.getAll()\n    .then(res=> res.map(r=> r.venue))\n    .then(res=>{\n      this.setState({restaurants:res})\n    })\n    .catch(error=>console.log(error))\n  }\n\n  onCategoryChange = (event)=>{\n    var selected = event.target.value\n    this.setState({\n      filter:selected,\n      clickedList:'',\n      mouseOvered:'',\n      query:''\n    })\n  }\n\n  onInputChange = (event)=>{\n    this.setState({\n      query:event.target.value,\n      clickedList:'',\n      mouseOvered:''\n    })\n  }\n\n  onMouseOverList = (event)=>{\n    if(this.state.clickedList.id!== event.currentTarget.id){\n      this.setState({\n        clickedList:''\n      })\n    }\n    this.setState({mouseOvered:event.currentTarget.id})\n  }\n\n  onMouseOutList =()=>{\n    this.setState({mouseOvered:'',activeListInfo:false})\n  }\n\n  onClickedList = (event) =>{\n    this.setState({clickedList:event.currentTarget,\n                   activeListInfo:true})\n  }\n\n  toggleNav=()=>{\n    document.querySelector('.app').classList.toggle('openNav')\n    document.querySelector('.menuIcon').classList.toggle('closeIcon')\n    if(document.querySelector('.menuIcon').classList.contains('closeIcon')){\n      document.querySelector('.closeIcon').setAttribute('aria-label','close')\n    }else{\n      document.querySelector('.menuIcon').setAttribute('aria-label','menu')\n    }\n  }\n\n  render() {\n    return (\n      <div className ='app'>\n        <header>\n          <h1  className ='title' tabIndex='0'>Food in Mountain View</h1>\n          <div className = 'menuIcon' tabIndex='0' aria-label='menu' onClick ={this.toggleNav}></div>\n        </header>\n\n        <nav role='navigation' tabIndex='0' className='menu'>\n            <Nav\n            restaurants = {this.state.restaurants}\n            onCategoryChange = {this.onCategoryChange}\n            onInputChange = {this.onInputChange}\n            query = {this.state.query}\n            filter = {this.state.filter}\n            showingRestaurants = {this.state.showingRestaurants}\n            onMouseOverList = {this.onMouseOverList}\n            onMouseOutList = {this.onMouseOutList}\n            onClickedList = {this.onClickedList}\n            />\n          </nav>\n\n        <main role='main'>\n          <div role='application' id='map'>\n            <Map restaurants = {this.state.restaurants}\n                  filter = {this.state.filter}\n                  query = {this.state.query}\n                  clickedList = {this.state.clickedList}\n                  mouseOvered = {this.state.mouseOvered}\n                  activeListInfo = {this.state.activeListInfo}\n                  />\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker-custom.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}